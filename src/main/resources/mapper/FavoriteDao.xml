<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.hnu.dao.FavoriteDao">

    <resultMap type="edu.hnu.entity.Favorite" id="FavoriteMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="collectionId" column="collection_id" jdbcType="INTEGER"/>
        <result property="favoriteContentId" column="favorite_content_id" jdbcType="INTEGER"/>
        <result property="favoriteTime" column="favorite_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="FavoriteMap">
        select iduser_idcollection_idfavorite_content_idfavorite_time
        from favorite
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="FavoriteMap">
        select
        iduser_idcollection_idfavorite_content_idfavorite_time
        from favorite
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="collectionId != null">
                and collection_id = #{collectionId}
            </if>
            <if test="favoriteContentId != null">
                and favorite_content_id = #{favoriteContentId}
            </if>
            <if test="favoriteTime != null">
                and favorite_time = #{favoriteTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from favorite
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="collectionId != null">
                and collection_id = #{collectionId}
            </if>
            <if test="favoriteContentId != null">
                and favorite_content_id = #{favoriteContentId}
            </if>
            <if test="favoriteTime != null">
                and favorite_time = #{favoriteTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into favorite(user_idcollection_idfavorite_content_idfavorite_time)
        values (#{userId}#{collectionId}#{favoriteContentId}#{favoriteTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into favorite(user_idcollection_idfavorite_content_idfavorite_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}#{entity.collectionId}#{entity.favoriteContentId}#{entity.favoriteTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into favorite(user_idcollection_idfavorite_content_idfavorite_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}#{entity.collectionId}#{entity.favoriteContentId}#{entity.favoriteTime})
        </foreach>
        on duplicate key update
        user_id = values(user_id)collection_id = values(collection_id)favorite_content_id =
        values(favorite_content_id)favorite_time = values(favorite_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update favorite
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="collectionId != null">
                collection_id = #{collectionId},
            </if>
            <if test="favoriteContentId != null">
                favorite_content_id = #{favoriteContentId},
            </if>
            <if test="favoriteTime != null">
                favorite_time = #{favoriteTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from favorite
        where id = #{id}
    </delete>

</mapper>

