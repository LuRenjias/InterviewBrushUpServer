<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.hnu.dao.UserDao">

    <resultMap type="edu.hnu.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="openid" column="openid" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="avatarUrl" column="avatar_url" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="followingCount" column="following_count" jdbcType="INTEGER"/>
        <result property="followersCount" column="followers_count" jdbcType="INTEGER"/>
        <result property="userIdentity" column="user_identity" jdbcType="VARCHAR"/>
        <result property="registrationTime" column="registration_time" jdbcType="TIMESTAMP"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>
        <result property="lastLoginIp" column="last_login_ip" jdbcType="VARCHAR"/>
        <result property="lastLoginDevice" column="last_login_device" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="queryByOpenId" resultMap="UserMap">
        select id,
               openid,
               phone_number,
               nickname,
               avatar_url,
               gender,
               following_count,
               followers_count,
               user_identity,
               registration_time,
               last_login_time,
               last_login_ip,
               last_login_device
        from user
        where openid = #{openId}
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(openid, phone_number, nickname, avatar_url, gender, following_count, followers_count,
                         user_identity, registration_time, last_login_time, last_login_ip, last_login_device)
            value (#{openid}, #{phoneNumber}, #{nickname}, #{avatarUrl}, #{gender}, #{followingCount},
                   #{followersCount},
                   #{userIdentity}, #{registrationTime}, #{lastLoginTime}, #{lastLoginIp}, #{lastLoginDevice})
    </insert>

    <update id="update">
        update user
        <set>
            <if test="openid != null">
                openid = #{openid},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="avatarUrl != null">
                avatar_url = #{avatarUrl},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="followingCount != null">
                following_count = #{followingCount},
            </if>
            <if test="followersCount != null">
                followers_count = #{followersCount},
            </if>
            <if test="userIdentity != null">
                user_identity = #{userIdentity},
            </if>
            <if test="registrationTime != null">
                registration_time = #{registrationTime},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime},
            </if>
            <if test="lastLoginIp != null">
                last_login_ip = #{lastLoginIp},
            </if>
            <if test="lastLoginDevice != null">
                last_login_device = #{lastLoginDevice},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="queryById" resultMap="UserMap">
        select id,
               openid,
               phone_number,
               nickname,
               avatar_url,
               gender,
               following_count,
               followers_count,
               user_identity,
               registration_time,
               last_login_time,
               last_login_ip,
               last_login_device
        from user
        where id = #{id}
    </select>

</mapper>

